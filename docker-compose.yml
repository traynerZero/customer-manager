# docker-compose.yml
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: customer-manager
        container_name: customer-manager
        restart: unless-stopped
        working_dir: /var/www/html # Adjusted to match Dockerfile WORKDIR
        environment:
            - DB_HOST=mysql
            - DB_PORT=3306
            - DB_DATABASE=customermanager
            - DB_USERNAME=customer
            - DB_PASSWORD=admin
        volumes:
            - .:/var/www/html
            - ./vendor:/var/www/html/vendor
            - ./node_modules:/var/www/html/node_modules
        networks:
            - customer-manager
        healthcheck:
            test: ["CMD-SHELL", "php artisan migrate:status || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 5
    web:
        build:
            context: .
            dockerfile: ./nginx/Dockerfile
        image: nginx-server
        container_name: nginx-server
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - .:/var/www/html # Ensure this matches your application structure
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - app
        networks:
            - customer-manager

    mysql:
        image: mysql:5.7
        container_name: mysql
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: customermanager
            MYSQL_USER: customer
            MYSQL_PASSWORD: admin
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - customer-manager

networks:
    customer-manager:

volumes:
    mysql_data:
